{
  "name": "mtwitter",
  "version": "1.0.2",
  "description": "Twitter 1.1 client API for NodeJS",
  "keywords": [
    "twitter",
    "streaming",
    "oauth"
  ],
  "homepage": "https://npmjs.org/package/mtwitter",
  "author": {
    "name": "Various"
  },
  "contributors": [
    {
      "name": "Félix Saparelli",
      "email": "me@passcod.name"
    },
    {
      "name": "Won Dong",
      "email": "fkiller@gmail.com"
    },
    {
      "name": "Dominic Rout",
      "email": "d.rout@sheffield.ac.uk"
    },
    {
      "name": "Benjamin Dean",
      "email": "bdeam@exacttarget.com"
    },
    {
      "name": "Hadiyah Mujhid",
      "email": "me@hadiyah.me"
    },
    {
      "name": "Eriks Remess",
      "email": "eriks@remess.lv"
    },
    {
      "name": "Nacho Soto",
      "email": "ignaciosoto90@gmail.com"
    },
    {
      "name": "Charlie McConnell",
      "email": "charlie@charlieistheman.com"
    },
    {
      "name": "Roly Fentanes",
      "email": "roly426@gmail.com"
    },
    {
      "name": "Shih-Yung Lee",
      "email": "shiyung@gmail.com"
    },
    {
      "name": "Adam Crabtree",
      "email": "adam.crabtree@redrobotlabs.com"
    },
    {
      "name": "Ben Atkin",
      "email": "ben@benatkin.com"
    },
    {
      "name": "Michael Heap",
      "email": "m@michaelheap.com"
    },
    {
      "name": "Farrin Reid",
      "email": "blakmatrix@gmail.com"
    },
    {
      "name": "Eric Martindale",
      "email": "eric@ericmartindale.com"
    },
    {
      "name": "Hristo Dachev",
      "email": "tutini@gmail.com"
    },
    {
      "name": "Duncan Angus Wilkie",
      "email": "duncanwilkie@hotmail.com"
    },
    {
      "name": "Liang-Chi Hsieh",
      "email": "viirya@linux.(none)",
      "url": "none"
    },
    {
      "name": "Junho Kyung",
      "email": "to@firejune.com"
    },
    {
      "name": "Seiya Konno",
      "email": "seiya@uniba.jp"
    },
    {
      "name": "James Codes",
      "email": "James.Codes@gmail.com"
    },
    {
      "name": "Sam Barbosa",
      "email": "sam.barbosa@ymail.com"
    },
    {
      "name": "Philip Mateescu",
      "email": "github@philipm.us"
    },
    {
      "name": "Aaron Hinni",
      "email": "aaron@hinnispace.com"
    },
    {
      "name": "Dylan Vassallo",
      "email": "dylanvassallo@gmail.com"
    },
    {
      "name": "Dan Zajdband",
      "email": "dan.zajdband@gmail.com"
    },
    {
      "name": "Justin Wagle",
      "email": "jwagle@adobe.com"
    },
    {
      "name": "Mehdi El Fadil",
      "email": "m.ef@mango-is.com"
    },
    {
      "name": "Yin Shanyang",
      "email": "yang@swarm.is"
    },
    {
      "name": "Ian Babrou",
      "email": "ibobrik@gmail.com"
    },
    {
      "name": "Fabio",
      "email": "fat@fatshotty.net"
    },
    {
      "name": "Tim Cameron Ryan",
      "email": "id@timryan.org"
    },
    {
      "name": "Jonathan Griggs",
      "email": "jonathan.griggs@gmail.com"
    },
    {
      "name": "Cole",
      "email": "cole@projectmastermind.com"
    },
    {
      "name": "Peter",
      "email": "peter@waganer.org"
    },
    {
      "name": "Clint Andrew Hall",
      "email": "clint@clintandrewhall.com"
    },
    {
      "name": "Jeff Waugh",
      "email": "jdub@bethesignal.org"
    },
    {
      "name": "François de Metz",
      "email": "francois@2metz.fr"
    },
    {
      "name": "Ryan W Tenney",
      "email": "ryan@10e.us"
    },
    {
      "name": "Jan Michael Alonzo",
      "email": "jmalonzo@gmail.com"
    },
    {
      "name": "Tim-Smart",
      "email": "tim@fostle.com"
    },
    {
      "name": "Rick Olson",
      "email": "technoweenie@gmail.com"
    },
    {
      "name": "Andreas Kompanez",
      "email": "kompozer@Andreas-Kompanezs-MacBook-Pro-15.local"
    },
    {
      "name": "Matt Secoske",
      "email": "matt@nimblelogic.com"
    }
  ],
  "licenses": {
    "type": "MIT",
    "url": "http://mit-license.org"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/passcod/mtwitter.git"
  },
  "dependencies": {
    "oauth": ">=0.8.4",
    "cookies": "0.1.x",
    "keygrip": "0.2.x"
  },
  "devDependencies": {
    "should": "*",
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "main": "./lib/twitter",
  "readme": "Twitter 1.1 client API for NodeJS\n=================================\n\n__[mtwitter](https://github.com/passcod/mtwitter)__ is an updated\nversion of [@AvianFlu](https://github.com/AvianFlu)'s\n[ntwitter](https://github.com/AvianFlu/ntwitter), which in turn was\nforked from [@jdub](https://github.com/jdub)'s\n[node-twitter](https://github.com/jdub/node-twitter), and so on…\n\n\n## Installation\n\nYou can install __mtwitter__ and its dependencies with npm:\n\n``` bash\n$ npm install mtwitter\n```\n\nbut you should really put it in your\n[package.json](http://package.json.nodejitsu.com/) and run:\n\n``` bash\n$ npm install\n```\n\nto install everything.\n\n\n## Getting started\n\n### Setup API \n\nThe keys listed below can be obtained from\n[dev.twitter.com](https://dev.twitter.com) after\n[setting up a new App](https://dev.twitter.com/apps/new).\n\n``` javascript\nvar twitter = require('mtwitter');\n\nvar twit = new twitter({\n  consumer_key: 'Twitter',\n  consumer_secret: 'API',\n  access_token_key: 'keys',\n  access_token_secret: 'go here'\n});\n```\n\n\n### REST API \n\nInteraction with other parts of Twitter is accomplished through their RESTful API.\nThe best documentation for this exists at [dev.twitter.com](https://dev.twitter.com).\n\nConvenience methods exist for many of the available methods, but some may be\nmore up-to-date than others. If your Twitter interaction is very important,\ndouble-check the parameters in the code with Twitter's current documentation.\n\nNote that all functions may be chained:\n\n``` javascript\ntwit\n  .verifyCredentials(function (err, data) {\n    console.log(data);\n  })\n  .updateStatus('Test tweet from mtwitter/' + twitter.VERSION,\n    function (err, data) {\n      console.log(data);\n    }\n  );\n```\n\n### Search API \n\n``` javascript\ntwit.search('nodejs OR #node', {}, function(err, data) {\n  console.log(data);\n});\n```\n\n### Streaming API \n\nThe stream() callback receives a Stream-like EventEmitter.\n\nHere is an example of how to call the `statuses/sample` method:\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('data', function (data) {\n    console.log(data);\n  });\n});\n```\n        \nHere is an example of how to call the 'statuses/filter' method with a bounding\nbox over San Fransisco and New York City ( see streaming api for more details\non [locations](https://dev.twitter.com/docs/streaming-api/methods#locations) ):\n\n``` javascript\ntwit.stream('statuses/filter', {'locations':'-122.75,36.8,-121.75,37.8,-74,40,-73,41'}, function(stream) {\n  stream.on('data', function (data) {\n    console.log(data);\n  });\n});\n```\n\nHere is an example of how to call the 'statuses/filter' method using the track\nand delimited request parameter for more details on [Streaming API request\nparameters](https://dev.twitter.com/docs/streaming-apis/parameters#delimited):\n\n``` javascript\ntwit.stream('statuses/filter', {track: ['cool'], delimited: 'length'}, function(stream) {\n  stream.on('data', function (data) {\n    if( 'number' === typeof( data ) ){\n      console.log( data );\n    } else {\n      console.log( data.text );\n    }\n  });\n});\n```\n\n__mtwitter__ also supports user and site streams:\n\n``` javascript\ntwit.stream('user', {track:'nodejs'}, function(stream) {\n  stream.on('data', function (data) {\n    console.log(data);\n  });\n  stream.on('end', function (response) {\n    // Handle a disconnection\n  });\n  stream.on('destroy', function (response) {\n    // Handle a 'silent' disconnection from Twitter, no end/error event fired\n  });\n  // Disconnect stream after five seconds\n  setTimeout(stream.destroy, 5000);\n});\n```\n\n## Community\n\nForked from @AvianFlu's [seemingly dead\nrepo](https://github.com/AvianFlu/ntwitter),\nwith contributions from various PRs.\n\nAll contributors are listed in the\n[`package.json`](https://github.com/passcod/mtwitter/blob/master/package.json).",
  "readmeFilename": "README.md",
  "_id": "mtwitter@1.0.2",
  "dist": {
    "shasum": "9abc84170bf8924eafbd92128634132b75aa8ac5"
  },
  "_from": "mtwitter@*",
  "_resolved": "https://registry.npmjs.org/mtwitter/-/mtwitter-1.0.2.tgz"
}
